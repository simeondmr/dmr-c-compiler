Grammar:

<program> ::= <function>
<function> ::= "int" <identifier> "(" "void" ")" "{" { <block-item> } "}"
<block-item> ::= <declaration> | <statement>
<statement> ::= "return" <exp> ";"
              | <expr> ";"
              | ";"
<declaration> ::= "int" <identifier> [ "=" <expr> ] ";"
<exp> ::= <factor> | <exp> binop <exp>
<factor> ::= <int>
           | <unop> <exp>
           | "(" <exp> ")"
           | <identifier>
<unop> ::= "-" | "~" | "!"
<binop> ::= "+"
          | "-"
          | "*"
          | "/"
          | "%"
          | "&"
          | "|"
          | "^"
          | "~"
          | "<<"
          | ">>"
          | "=="
          | "!="
          | "<"
          | "<="
          | ">"
          | ">="
          | "&&"
          | "||"
          | "="
          | "+="
          | "-="
          | "*="
          | "/="
          | "|="
          | "&="
          | "^="
          | "<<="
          | ">>="
<identifier> ::= ? An identifier token ?
<int> ::= ? A constant token ?